syntax = "proto3";

package api;

// PubGolfService is the API server which handles all scorekeeping, scheduling and account management for pub golf.
service PubGolfService {
  // ClientVersion indicates to the server that a client of a given version is attempting to connect, and allows the server to respond with a "soft" or "hard" upgrade notification.
  rpc ClientVersion(ClientVersionRequest) returns (ClientVersionResponse) {}

  // Auth endpoints - accessible without auth token

  // BeginPlayerLogin sends a verification code to the player's phone number. It may be called for a player that's not yet signed up or to retry sending the code if the player doesn't recieve the text message, but is rate limited by the server.
  rpc BeginPlayerLogin(BeginPlayerLoginRequest) returns (BeginPlayerLoginResponse) {}
  // VerifyPlayerLogin validates the player's phone number and verification code in order to recieve an auth token, granting access to protected API methods.
  rpc VerifyPlayerLogin(VerifyPlayerLoginRequest) returns (VerifyPlayerLoginResponse) {}

}

message ClientVersionRequest {
  uint32 client_version = 1;
}
message ClientVersionResponse {
  enum VersionStatus {
    VERSION_OK = 0;
    VERSION_OUTDATED = 1;
    VERSION_INCOMPATIBLE = 2;
  }
  VersionStatus version_status = 1;
}


message BeginPlayerLoginRequest {
  // In E.164 format: https://www.twilio.com/docs/glossary/what-e164
  string phone_number = 1;
}
message BeginPlayerLoginResponse {}

message VerifyPlayerLoginRequest {
  // In E.164 format: https://www.twilio.com/docs/glossary/what-e164
  string phone_number = 1;
  uint32 verification_code = 2;
}
message VerifyPlayerLoginResponse {
  string auth_token = 1;
  string player_id = 2;
}
