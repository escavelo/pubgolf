version: '3'
services:
  api:
    build:
      context: ./
      dockerfile: ./api/Dockerfile
    image: pubgolf/api-server
    ports:
      - "${API_PORT}:${API_PORT}"
    networks:
      - proxy_pass
      - data_access
    environment:
      PUBGOLF_ENV: "DOCKER_DEV"
    env_file:
      - .env
  web-app:
    build:
      context: ./
      dockerfile: ./web-app/Dockerfile
    image: pubgolf/web-app
    ports:
      - "${WEB_APP_PORT}:${WEB_APP_PORT}"
    networks:
      - proxy_pass
    environment:
      - NODE_ENV=production
    env_file:
      - .env
  envoy:
    build:
      context: ./envoy/
    image: pubgolf/envoy
    volumes:
      - "${PWD}/envoy/config.yaml.tmpl:/etc/envoy/config.yaml.tmpl"
      - "${PWD}/envoy/entrypoint.sh:/etc/envoy/entrypoint.sh"
    ports:
      - "${ENVOY_ADMIN_PORT}:${ENVOY_ADMIN_PORT}"
      - "${GRPC_WEB_PORT}:${GRPC_WEB_PORT}"
    networks:
      - proxy_pass
    environment:
      ADMIN_PORT: "${ENVOY_ADMIN_PORT}"
      GRPC_WEB_INBOUND_PORT: "${GRPC_WEB_PORT}"
      API_UPSTREAM_HOST: "${API_HOST}"
      API_UPSTREAM_PORT: "${API_PORT}"
  db:
    image: postgres
    restart: always
    ports:
      - "${HOST_DB_PORT}:${DB_PORT}"
    networks:
      - data_access
    volumes:
      - "${PWD}/api/data:/var/lib/postgresql/data"
    environment:
      POSTGRES_NAME: "${DB_NAME}"
      POSTGRES_USER: "${DB_USER}"
      POSTGRES_PASSWORD: "${DB_PASSWORD}"
  testdb:
    image: postgres
    ports:
      - "${TEST_DB_PORT}:5432"
    networks:
      - data_access
    environment:
      POSTGRES_NAME: pubgolf_test
      POSTGRES_USER: pubgolf_test
      POSTGRES_PASSWORD: pubgolf_test
networks:
  proxy_pass:
  data_access:

