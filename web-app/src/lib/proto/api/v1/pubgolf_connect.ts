// PubGolf defines the app-facing API service for the in-game apps.

// @generated by protoc-gen-connect-es v0.8.6 with parameter "target=ts"
// @generated from file api/v1/pubgolf.proto (package api.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { ClientVersionRequest, ClientVersionResponse, GetScheduleRequest, GetScheduleResponse, GetVenueRequest, GetVenueResponse } from "./pubgolf_pb.js";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * PubGolfService is the API server which handles all score keeping, scheduling and account management for pub golf.
 *
 * @generated from service api.v1.PubGolfService
 */
export const PubGolfService = {
  typeName: "api.v1.PubGolfService",
  methods: {
    /**
     * ClientVersion indicates to the server that a client of a given version is attempting to connect, and allows the server to respond with a "soft" or "hard" upgrade notification.
     *
     * @generated from rpc api.v1.PubGolfService.ClientVersion
     */
    clientVersion: {
      name: "ClientVersion",
      I: ClientVersionRequest,
      O: ClientVersionResponse,
      kind: MethodKind.Unary,
    },
    /**
     * GetSchedule returns the list of visble venues, as well as the next venue transition time. It optionally accepts a data version to allow local caching.
     *
     * @generated from rpc api.v1.PubGolfService.GetSchedule
     */
    getSchedule: {
      name: "GetSchedule",
      I: GetScheduleRequest,
      O: GetScheduleResponse,
      kind: MethodKind.Unary,
    },
    /**
     * GetVenue performs a bulk lookup of venue metadata by ID. IDs are scoped to an event key.
     *
     * @generated from rpc api.v1.PubGolfService.GetVenue
     */
    getVenue: {
      name: "GetVenue",
      I: GetVenueRequest,
      O: GetVenueResponse,
      kind: MethodKind.Unary,
    },
  }
} as const;

