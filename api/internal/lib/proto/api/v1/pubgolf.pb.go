// PubGolf defines the app-facing API service for the in-game apps.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        (unknown)
// source: api/v1/pubgolf.proto

package apiv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ClientVersionResponse_VersionStatus int32

const (
	ClientVersionResponse_VERSION_STATUS_UNSPECIFIED  ClientVersionResponse_VersionStatus = 0
	ClientVersionResponse_VERSION_STATUS_OK           ClientVersionResponse_VersionStatus = 1
	ClientVersionResponse_VERSION_STATUS_OUTDATED     ClientVersionResponse_VersionStatus = 2
	ClientVersionResponse_VERSION_STATUS_INCOMPATIBLE ClientVersionResponse_VersionStatus = 3
)

// Enum value maps for ClientVersionResponse_VersionStatus.
var (
	ClientVersionResponse_VersionStatus_name = map[int32]string{
		0: "VERSION_STATUS_UNSPECIFIED",
		1: "VERSION_STATUS_OK",
		2: "VERSION_STATUS_OUTDATED",
		3: "VERSION_STATUS_INCOMPATIBLE",
	}
	ClientVersionResponse_VersionStatus_value = map[string]int32{
		"VERSION_STATUS_UNSPECIFIED":  0,
		"VERSION_STATUS_OK":           1,
		"VERSION_STATUS_OUTDATED":     2,
		"VERSION_STATUS_INCOMPATIBLE": 3,
	}
)

func (x ClientVersionResponse_VersionStatus) Enum() *ClientVersionResponse_VersionStatus {
	p := new(ClientVersionResponse_VersionStatus)
	*p = x
	return p
}

func (x ClientVersionResponse_VersionStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ClientVersionResponse_VersionStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_api_v1_pubgolf_proto_enumTypes[0].Descriptor()
}

func (ClientVersionResponse_VersionStatus) Type() protoreflect.EnumType {
	return &file_api_v1_pubgolf_proto_enumTypes[0]
}

func (x ClientVersionResponse_VersionStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ClientVersionResponse_VersionStatus.Descriptor instead.
func (ClientVersionResponse_VersionStatus) EnumDescriptor() ([]byte, []int) {
	return file_api_v1_pubgolf_proto_rawDescGZIP(), []int{1, 0}
}

type ClientVersionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientVersion uint32 `protobuf:"varint,1,opt,name=client_version,json=clientVersion,proto3" json:"client_version,omitempty"`
}

func (x *ClientVersionRequest) Reset() {
	*x = ClientVersionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_pubgolf_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientVersionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientVersionRequest) ProtoMessage() {}

func (x *ClientVersionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_pubgolf_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientVersionRequest.ProtoReflect.Descriptor instead.
func (*ClientVersionRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_pubgolf_proto_rawDescGZIP(), []int{0}
}

func (x *ClientVersionRequest) GetClientVersion() uint32 {
	if x != nil {
		return x.ClientVersion
	}
	return 0
}

type ClientVersionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VersionStatus ClientVersionResponse_VersionStatus `protobuf:"varint,1,opt,name=version_status,json=versionStatus,proto3,enum=api.v1.ClientVersionResponse_VersionStatus" json:"version_status,omitempty"`
}

func (x *ClientVersionResponse) Reset() {
	*x = ClientVersionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_pubgolf_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientVersionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientVersionResponse) ProtoMessage() {}

func (x *ClientVersionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_pubgolf_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientVersionResponse.ProtoReflect.Descriptor instead.
func (*ClientVersionResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_pubgolf_proto_rawDescGZIP(), []int{1}
}

func (x *ClientVersionResponse) GetVersionStatus() ClientVersionResponse_VersionStatus {
	if x != nil {
		return x.VersionStatus
	}
	return ClientVersionResponse_VERSION_STATUS_UNSPECIFIED
}

// Deprecated: Marked as deprecated in api/v1/pubgolf.proto.
type PubGolfServiceCreatePlayerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventKey   string      `protobuf:"bytes,1,opt,name=event_key,json=eventKey,proto3" json:"event_key,omitempty"`
	PlayerData *PlayerData `protobuf:"bytes,2,opt,name=player_data,json=playerData,proto3" json:"player_data,omitempty"`
}

func (x *PubGolfServiceCreatePlayerRequest) Reset() {
	*x = PubGolfServiceCreatePlayerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_pubgolf_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PubGolfServiceCreatePlayerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PubGolfServiceCreatePlayerRequest) ProtoMessage() {}

func (x *PubGolfServiceCreatePlayerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_pubgolf_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PubGolfServiceCreatePlayerRequest.ProtoReflect.Descriptor instead.
func (*PubGolfServiceCreatePlayerRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_pubgolf_proto_rawDescGZIP(), []int{2}
}

func (x *PubGolfServiceCreatePlayerRequest) GetEventKey() string {
	if x != nil {
		return x.EventKey
	}
	return ""
}

func (x *PubGolfServiceCreatePlayerRequest) GetPlayerData() *PlayerData {
	if x != nil {
		return x.PlayerData
	}
	return nil
}

// Deprecated: Marked as deprecated in api/v1/pubgolf.proto.
type PubGolfServiceCreatePlayerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Player *Player `protobuf:"bytes,1,opt,name=player,proto3" json:"player,omitempty"`
}

func (x *PubGolfServiceCreatePlayerResponse) Reset() {
	*x = PubGolfServiceCreatePlayerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_pubgolf_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PubGolfServiceCreatePlayerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PubGolfServiceCreatePlayerResponse) ProtoMessage() {}

func (x *PubGolfServiceCreatePlayerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_pubgolf_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PubGolfServiceCreatePlayerResponse.ProtoReflect.Descriptor instead.
func (*PubGolfServiceCreatePlayerResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_pubgolf_proto_rawDescGZIP(), []int{3}
}

func (x *PubGolfServiceCreatePlayerResponse) GetPlayer() *Player {
	if x != nil {
		return x.Player
	}
	return nil
}

type StartPlayerLoginRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// In E.164 format: https://www.twilio.com/docs/glossary/what-e164
	PhoneNumber string `protobuf:"bytes,1,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
}

func (x *StartPlayerLoginRequest) Reset() {
	*x = StartPlayerLoginRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_pubgolf_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartPlayerLoginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartPlayerLoginRequest) ProtoMessage() {}

func (x *StartPlayerLoginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_pubgolf_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartPlayerLoginRequest.ProtoReflect.Descriptor instead.
func (*StartPlayerLoginRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_pubgolf_proto_rawDescGZIP(), []int{4}
}

func (x *StartPlayerLoginRequest) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

type StartPlayerLoginResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StartPlayerLoginResponse) Reset() {
	*x = StartPlayerLoginResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_pubgolf_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartPlayerLoginResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartPlayerLoginResponse) ProtoMessage() {}

func (x *StartPlayerLoginResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_pubgolf_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartPlayerLoginResponse.ProtoReflect.Descriptor instead.
func (*StartPlayerLoginResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_pubgolf_proto_rawDescGZIP(), []int{5}
}

type CompletePlayerLoginRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// In E.164 format: https://www.twilio.com/docs/glossary/what-e164
	PhoneNumber string `protobuf:"bytes,1,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	AuthCode    string `protobuf:"bytes,2,opt,name=auth_code,json=authCode,proto3" json:"auth_code,omitempty"`
}

func (x *CompletePlayerLoginRequest) Reset() {
	*x = CompletePlayerLoginRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_pubgolf_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompletePlayerLoginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompletePlayerLoginRequest) ProtoMessage() {}

func (x *CompletePlayerLoginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_pubgolf_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompletePlayerLoginRequest.ProtoReflect.Descriptor instead.
func (*CompletePlayerLoginRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_pubgolf_proto_rawDescGZIP(), []int{6}
}

func (x *CompletePlayerLoginRequest) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *CompletePlayerLoginRequest) GetAuthCode() string {
	if x != nil {
		return x.AuthCode
	}
	return ""
}

type CompletePlayerLoginResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Player    *Player `protobuf:"bytes,1,opt,name=player,proto3" json:"player,omitempty"`
	AuthToken string  `protobuf:"bytes,2,opt,name=auth_token,json=authToken,proto3" json:"auth_token,omitempty"`
}

func (x *CompletePlayerLoginResponse) Reset() {
	*x = CompletePlayerLoginResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_pubgolf_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompletePlayerLoginResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompletePlayerLoginResponse) ProtoMessage() {}

func (x *CompletePlayerLoginResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_pubgolf_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompletePlayerLoginResponse.ProtoReflect.Descriptor instead.
func (*CompletePlayerLoginResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_pubgolf_proto_rawDescGZIP(), []int{7}
}

func (x *CompletePlayerLoginResponse) GetPlayer() *Player {
	if x != nil {
		return x.Player
	}
	return nil
}

func (x *CompletePlayerLoginResponse) GetAuthToken() string {
	if x != nil {
		return x.AuthToken
	}
	return ""
}

type GetMyPlayerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetMyPlayerRequest) Reset() {
	*x = GetMyPlayerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_pubgolf_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMyPlayerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMyPlayerRequest) ProtoMessage() {}

func (x *GetMyPlayerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_pubgolf_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMyPlayerRequest.ProtoReflect.Descriptor instead.
func (*GetMyPlayerRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_pubgolf_proto_rawDescGZIP(), []int{8}
}

type GetMyPlayerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Player *Player `protobuf:"bytes,1,opt,name=player,proto3" json:"player,omitempty"`
}

func (x *GetMyPlayerResponse) Reset() {
	*x = GetMyPlayerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_pubgolf_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMyPlayerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMyPlayerResponse) ProtoMessage() {}

func (x *GetMyPlayerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_pubgolf_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMyPlayerResponse.ProtoReflect.Descriptor instead.
func (*GetMyPlayerResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_pubgolf_proto_rawDescGZIP(), []int{9}
}

func (x *GetMyPlayerResponse) GetPlayer() *Player {
	if x != nil {
		return x.Player
	}
	return nil
}

type GetPlayerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId string `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
}

func (x *GetPlayerRequest) Reset() {
	*x = GetPlayerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_pubgolf_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlayerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlayerRequest) ProtoMessage() {}

func (x *GetPlayerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_pubgolf_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlayerRequest.ProtoReflect.Descriptor instead.
func (*GetPlayerRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_pubgolf_proto_rawDescGZIP(), []int{10}
}

func (x *GetPlayerRequest) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

type GetPlayerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Player *Player `protobuf:"bytes,1,opt,name=player,proto3" json:"player,omitempty"`
}

func (x *GetPlayerResponse) Reset() {
	*x = GetPlayerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_pubgolf_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlayerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlayerResponse) ProtoMessage() {}

func (x *GetPlayerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_pubgolf_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlayerResponse.ProtoReflect.Descriptor instead.
func (*GetPlayerResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_pubgolf_proto_rawDescGZIP(), []int{11}
}

func (x *GetPlayerResponse) GetPlayer() *Player {
	if x != nil {
		return x.Player
	}
	return nil
}

type UpdateRegistrationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId          string             `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	EventRegistration *EventRegistration `protobuf:"bytes,2,opt,name=event_registration,json=eventRegistration,proto3" json:"event_registration,omitempty"`
}

func (x *UpdateRegistrationRequest) Reset() {
	*x = UpdateRegistrationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_pubgolf_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRegistrationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRegistrationRequest) ProtoMessage() {}

func (x *UpdateRegistrationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_pubgolf_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRegistrationRequest.ProtoReflect.Descriptor instead.
func (*UpdateRegistrationRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_pubgolf_proto_rawDescGZIP(), []int{12}
}

func (x *UpdateRegistrationRequest) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *UpdateRegistrationRequest) GetEventRegistration() *EventRegistration {
	if x != nil {
		return x.EventRegistration
	}
	return nil
}

type UpdateRegistrationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventRegistration *EventRegistration `protobuf:"bytes,1,opt,name=event_registration,json=eventRegistration,proto3" json:"event_registration,omitempty"`
}

func (x *UpdateRegistrationResponse) Reset() {
	*x = UpdateRegistrationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_pubgolf_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRegistrationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRegistrationResponse) ProtoMessage() {}

func (x *UpdateRegistrationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_pubgolf_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRegistrationResponse.ProtoReflect.Descriptor instead.
func (*UpdateRegistrationResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_pubgolf_proto_rawDescGZIP(), []int{13}
}

func (x *UpdateRegistrationResponse) GetEventRegistration() *EventRegistration {
	if x != nil {
		return x.EventRegistration
	}
	return nil
}

type UpdatePlayerDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId string      `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	Data     *PlayerData `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *UpdatePlayerDataRequest) Reset() {
	*x = UpdatePlayerDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_pubgolf_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePlayerDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePlayerDataRequest) ProtoMessage() {}

func (x *UpdatePlayerDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_pubgolf_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePlayerDataRequest.ProtoReflect.Descriptor instead.
func (*UpdatePlayerDataRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_pubgolf_proto_rawDescGZIP(), []int{14}
}

func (x *UpdatePlayerDataRequest) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *UpdatePlayerDataRequest) GetData() *PlayerData {
	if x != nil {
		return x.Data
	}
	return nil
}

type UpdatePlayerDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *PlayerData `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *UpdatePlayerDataResponse) Reset() {
	*x = UpdatePlayerDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_pubgolf_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePlayerDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePlayerDataResponse) ProtoMessage() {}

func (x *UpdatePlayerDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_pubgolf_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePlayerDataResponse.ProtoReflect.Descriptor instead.
func (*UpdatePlayerDataResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_pubgolf_proto_rawDescGZIP(), []int{15}
}

func (x *UpdatePlayerDataResponse) GetData() *PlayerData {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetScheduleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventKey          string  `protobuf:"bytes,1,opt,name=event_key,json=eventKey,proto3" json:"event_key,omitempty"`
	CachedDataVersion *uint32 `protobuf:"varint,2,opt,name=cached_data_version,json=cachedDataVersion,proto3,oneof" json:"cached_data_version,omitempty"`
}

func (x *GetScheduleRequest) Reset() {
	*x = GetScheduleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_pubgolf_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetScheduleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetScheduleRequest) ProtoMessage() {}

func (x *GetScheduleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_pubgolf_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetScheduleRequest.ProtoReflect.Descriptor instead.
func (*GetScheduleRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_pubgolf_proto_rawDescGZIP(), []int{16}
}

func (x *GetScheduleRequest) GetEventKey() string {
	if x != nil {
		return x.EventKey
	}
	return ""
}

func (x *GetScheduleRequest) GetCachedDataVersion() uint32 {
	if x != nil && x.CachedDataVersion != nil {
		return *x.CachedDataVersion
	}
	return 0
}

type GetScheduleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LatestDataVersion uint32                        `protobuf:"varint,1,opt,name=latest_data_version,json=latestDataVersion,proto3" json:"latest_data_version,omitempty"`
	Schedule          *GetScheduleResponse_Schedule `protobuf:"bytes,2,opt,name=schedule,proto3,oneof" json:"schedule,omitempty"`
}

func (x *GetScheduleResponse) Reset() {
	*x = GetScheduleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_pubgolf_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetScheduleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetScheduleResponse) ProtoMessage() {}

func (x *GetScheduleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_pubgolf_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetScheduleResponse.ProtoReflect.Descriptor instead.
func (*GetScheduleResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_pubgolf_proto_rawDescGZIP(), []int{17}
}

func (x *GetScheduleResponse) GetLatestDataVersion() uint32 {
	if x != nil {
		return x.LatestDataVersion
	}
	return 0
}

func (x *GetScheduleResponse) GetSchedule() *GetScheduleResponse_Schedule {
	if x != nil {
		return x.Schedule
	}
	return nil
}

type GetVenueRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventKey  string   `protobuf:"bytes,1,opt,name=event_key,json=eventKey,proto3" json:"event_key,omitempty"`
	VenueKeys []uint32 `protobuf:"varint,2,rep,packed,name=venue_keys,json=venueKeys,proto3" json:"venue_keys,omitempty"`
}

func (x *GetVenueRequest) Reset() {
	*x = GetVenueRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_pubgolf_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVenueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVenueRequest) ProtoMessage() {}

func (x *GetVenueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_pubgolf_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVenueRequest.ProtoReflect.Descriptor instead.
func (*GetVenueRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_pubgolf_proto_rawDescGZIP(), []int{18}
}

func (x *GetVenueRequest) GetEventKey() string {
	if x != nil {
		return x.EventKey
	}
	return ""
}

func (x *GetVenueRequest) GetVenueKeys() []uint32 {
	if x != nil {
		return x.VenueKeys
	}
	return nil
}

type GetVenueResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Map of requested venue keys to Venue objects.
	Venues map[uint32]*GetVenueResponse_VenueWrapper `protobuf:"bytes,1,rep,name=venues,proto3" json:"venues,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *GetVenueResponse) Reset() {
	*x = GetVenueResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_pubgolf_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVenueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVenueResponse) ProtoMessage() {}

func (x *GetVenueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_pubgolf_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVenueResponse.ProtoReflect.Descriptor instead.
func (*GetVenueResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_pubgolf_proto_rawDescGZIP(), []int{19}
}

func (x *GetVenueResponse) GetVenues() map[uint32]*GetVenueResponse_VenueWrapper {
	if x != nil {
		return x.Venues
	}
	return nil
}

type ListContentItemsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventKey string `protobuf:"bytes,1,opt,name=event_key,json=eventKey,proto3" json:"event_key,omitempty"`
}

func (x *ListContentItemsRequest) Reset() {
	*x = ListContentItemsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_pubgolf_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListContentItemsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListContentItemsRequest) ProtoMessage() {}

func (x *ListContentItemsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_pubgolf_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListContentItemsRequest.ProtoReflect.Descriptor instead.
func (*ListContentItemsRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_pubgolf_proto_rawDescGZIP(), []int{20}
}

func (x *ListContentItemsRequest) GetEventKey() string {
	if x != nil {
		return x.EventKey
	}
	return ""
}

type ListContentItemsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sections []*ListContentItemsResponse_Section `protobuf:"bytes,1,rep,name=sections,proto3" json:"sections,omitempty"`
}

func (x *ListContentItemsResponse) Reset() {
	*x = ListContentItemsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_pubgolf_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListContentItemsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListContentItemsResponse) ProtoMessage() {}

func (x *ListContentItemsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_pubgolf_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListContentItemsResponse.ProtoReflect.Descriptor instead.
func (*ListContentItemsResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_pubgolf_proto_rawDescGZIP(), []int{21}
}

func (x *ListContentItemsResponse) GetSections() []*ListContentItemsResponse_Section {
	if x != nil {
		return x.Sections
	}
	return nil
}

type GetContentItemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetContentItemRequest) Reset() {
	*x = GetContentItemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_pubgolf_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetContentItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContentItemRequest) ProtoMessage() {}

func (x *GetContentItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_pubgolf_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContentItemRequest.ProtoReflect.Descriptor instead.
func (*GetContentItemRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_pubgolf_proto_rawDescGZIP(), []int{22}
}

func (x *GetContentItemRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetContentItemResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// content is in markdown format.
	Content string `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *GetContentItemResponse) Reset() {
	*x = GetContentItemResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_pubgolf_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetContentItemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContentItemResponse) ProtoMessage() {}

func (x *GetContentItemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_pubgolf_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContentItemResponse.ProtoReflect.Descriptor instead.
func (*GetContentItemResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_pubgolf_proto_rawDescGZIP(), []int{23}
}

func (x *GetContentItemResponse) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type GetScoresForCategoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventKey string          `protobuf:"bytes,1,opt,name=event_key,json=eventKey,proto3" json:"event_key,omitempty"`
	Category ScoringCategory `protobuf:"varint,2,opt,name=category,proto3,enum=api.v1.ScoringCategory" json:"category,omitempty"`
}

func (x *GetScoresForCategoryRequest) Reset() {
	*x = GetScoresForCategoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_pubgolf_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetScoresForCategoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetScoresForCategoryRequest) ProtoMessage() {}

func (x *GetScoresForCategoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_pubgolf_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetScoresForCategoryRequest.ProtoReflect.Descriptor instead.
func (*GetScoresForCategoryRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_pubgolf_proto_rawDescGZIP(), []int{24}
}

func (x *GetScoresForCategoryRequest) GetEventKey() string {
	if x != nil {
		return x.EventKey
	}
	return ""
}

func (x *GetScoresForCategoryRequest) GetCategory() ScoringCategory {
	if x != nil {
		return x.Category
	}
	return ScoringCategory_SCORING_CATEGORY_UNSPECIFIED
}

type GetScoresForCategoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScoreBoard *ScoreBoard `protobuf:"bytes,1,opt,name=score_board,json=scoreBoard,proto3" json:"score_board,omitempty"`
}

func (x *GetScoresForCategoryResponse) Reset() {
	*x = GetScoresForCategoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_pubgolf_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetScoresForCategoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetScoresForCategoryResponse) ProtoMessage() {}

func (x *GetScoresForCategoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_pubgolf_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetScoresForCategoryResponse.ProtoReflect.Descriptor instead.
func (*GetScoresForCategoryResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_pubgolf_proto_rawDescGZIP(), []int{25}
}

func (x *GetScoresForCategoryResponse) GetScoreBoard() *ScoreBoard {
	if x != nil {
		return x.ScoreBoard
	}
	return nil
}

type GetScoresForPlayerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventKey string `protobuf:"bytes,1,opt,name=event_key,json=eventKey,proto3" json:"event_key,omitempty"`
	PlayerId string `protobuf:"bytes,2,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
}

func (x *GetScoresForPlayerRequest) Reset() {
	*x = GetScoresForPlayerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_pubgolf_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetScoresForPlayerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetScoresForPlayerRequest) ProtoMessage() {}

func (x *GetScoresForPlayerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_pubgolf_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetScoresForPlayerRequest.ProtoReflect.Descriptor instead.
func (*GetScoresForPlayerRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_pubgolf_proto_rawDescGZIP(), []int{26}
}

func (x *GetScoresForPlayerRequest) GetEventKey() string {
	if x != nil {
		return x.EventKey
	}
	return ""
}

func (x *GetScoresForPlayerRequest) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

type GetScoresForPlayerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScoreBoard *ScoreBoard `protobuf:"bytes,1,opt,name=score_board,json=scoreBoard,proto3" json:"score_board,omitempty"`
}

func (x *GetScoresForPlayerResponse) Reset() {
	*x = GetScoresForPlayerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_pubgolf_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetScoresForPlayerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetScoresForPlayerResponse) ProtoMessage() {}

func (x *GetScoresForPlayerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_pubgolf_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetScoresForPlayerResponse.ProtoReflect.Descriptor instead.
func (*GetScoresForPlayerResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_pubgolf_proto_rawDescGZIP(), []int{27}
}

func (x *GetScoresForPlayerResponse) GetScoreBoard() *ScoreBoard {
	if x != nil {
		return x.ScoreBoard
	}
	return nil
}

type GetScoresForVenueRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventKey string `protobuf:"bytes,1,opt,name=event_key,json=eventKey,proto3" json:"event_key,omitempty"`
	VenueId  string `protobuf:"bytes,2,opt,name=venue_id,json=venueId,proto3" json:"venue_id,omitempty"`
}

func (x *GetScoresForVenueRequest) Reset() {
	*x = GetScoresForVenueRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_pubgolf_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetScoresForVenueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetScoresForVenueRequest) ProtoMessage() {}

func (x *GetScoresForVenueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_pubgolf_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetScoresForVenueRequest.ProtoReflect.Descriptor instead.
func (*GetScoresForVenueRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_pubgolf_proto_rawDescGZIP(), []int{28}
}

func (x *GetScoresForVenueRequest) GetEventKey() string {
	if x != nil {
		return x.EventKey
	}
	return ""
}

func (x *GetScoresForVenueRequest) GetVenueId() string {
	if x != nil {
		return x.VenueId
	}
	return ""
}

type GetScoresForVenueResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScoreBoard *ScoreBoard `protobuf:"bytes,1,opt,name=score_board,json=scoreBoard,proto3" json:"score_board,omitempty"`
}

func (x *GetScoresForVenueResponse) Reset() {
	*x = GetScoresForVenueResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_pubgolf_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetScoresForVenueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetScoresForVenueResponse) ProtoMessage() {}

func (x *GetScoresForVenueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_pubgolf_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetScoresForVenueResponse.ProtoReflect.Descriptor instead.
func (*GetScoresForVenueResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_pubgolf_proto_rawDescGZIP(), []int{29}
}

func (x *GetScoresForVenueResponse) GetScoreBoard() *ScoreBoard {
	if x != nil {
		return x.ScoreBoard
	}
	return nil
}

type GetScheduleResponse_Schedule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of past venues. Does not include the current venue.
	VisitedVenueKeys []uint32 `protobuf:"varint,1,rep,packed,name=visited_venue_keys,json=visitedVenueKeys,proto3" json:"visited_venue_keys,omitempty"`
	// Optional in the case that the event hasn't started yet.
	CurrentVenueKey *uint32 `protobuf:"varint,2,opt,name=current_venue_key,json=currentVenueKey,proto3,oneof" json:"current_venue_key,omitempty"`
	// Optional in the case that the next venue isn't yet visible to players, or after the second to last venue. The next venue key only becomes visible X mins before the next venue's start time.
	NextVenueKey   *uint32                `protobuf:"varint,3,opt,name=next_venue_key,json=nextVenueKey,proto3,oneof" json:"next_venue_key,omitempty"`
	NextVenueStart *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=next_venue_start,json=nextVenueStart,proto3,oneof" json:"next_venue_start,omitempty"`
	EventEnd       *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=event_end,json=eventEnd,proto3" json:"event_end,omitempty"`
	// current_venue_description contains rules specific to the current venue, in markdown format.
	CurrentVenueDescription *string `protobuf:"bytes,6,opt,name=current_venue_description,json=currentVenueDescription,proto3,oneof" json:"current_venue_description,omitempty"`
}

func (x *GetScheduleResponse_Schedule) Reset() {
	*x = GetScheduleResponse_Schedule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_pubgolf_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetScheduleResponse_Schedule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetScheduleResponse_Schedule) ProtoMessage() {}

func (x *GetScheduleResponse_Schedule) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_pubgolf_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetScheduleResponse_Schedule.ProtoReflect.Descriptor instead.
func (*GetScheduleResponse_Schedule) Descriptor() ([]byte, []int) {
	return file_api_v1_pubgolf_proto_rawDescGZIP(), []int{17, 0}
}

func (x *GetScheduleResponse_Schedule) GetVisitedVenueKeys() []uint32 {
	if x != nil {
		return x.VisitedVenueKeys
	}
	return nil
}

func (x *GetScheduleResponse_Schedule) GetCurrentVenueKey() uint32 {
	if x != nil && x.CurrentVenueKey != nil {
		return *x.CurrentVenueKey
	}
	return 0
}

func (x *GetScheduleResponse_Schedule) GetNextVenueKey() uint32 {
	if x != nil && x.NextVenueKey != nil {
		return *x.NextVenueKey
	}
	return 0
}

func (x *GetScheduleResponse_Schedule) GetNextVenueStart() *timestamppb.Timestamp {
	if x != nil {
		return x.NextVenueStart
	}
	return nil
}

func (x *GetScheduleResponse_Schedule) GetEventEnd() *timestamppb.Timestamp {
	if x != nil {
		return x.EventEnd
	}
	return nil
}

func (x *GetScheduleResponse_Schedule) GetCurrentVenueDescription() string {
	if x != nil && x.CurrentVenueDescription != nil {
		return *x.CurrentVenueDescription
	}
	return ""
}

// VenueWrapper allows us to return an empty wrapper in the case of an invalid or unauthorized venue ID.
type GetVenueResponse_VenueWrapper struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Venue *Venue `protobuf:"bytes,1,opt,name=venue,proto3,oneof" json:"venue,omitempty"`
}

func (x *GetVenueResponse_VenueWrapper) Reset() {
	*x = GetVenueResponse_VenueWrapper{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_pubgolf_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVenueResponse_VenueWrapper) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVenueResponse_VenueWrapper) ProtoMessage() {}

func (x *GetVenueResponse_VenueWrapper) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_pubgolf_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVenueResponse_VenueWrapper.ProtoReflect.Descriptor instead.
func (*GetVenueResponse_VenueWrapper) Descriptor() ([]byte, []int) {
	return file_api_v1_pubgolf_proto_rawDescGZIP(), []int{19, 0}
}

func (x *GetVenueResponse_VenueWrapper) GetVenue() *Venue {
	if x != nil {
		return x.Venue
	}
	return nil
}

type ListContentItemsResponse_ContentItemMetaData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	DisplayName string `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	// icon_key is an SF-Symbol name (e.g. "heart.fill").
	IconKey   string `protobuf:"bytes,3,opt,name=icon_key,json=iconKey,proto3" json:"icon_key,omitempty"`
	IconColor *Color `protobuf:"bytes,4,opt,name=icon_color,json=iconColor,proto3" json:"icon_color,omitempty"`
}

func (x *ListContentItemsResponse_ContentItemMetaData) Reset() {
	*x = ListContentItemsResponse_ContentItemMetaData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_pubgolf_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListContentItemsResponse_ContentItemMetaData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListContentItemsResponse_ContentItemMetaData) ProtoMessage() {}

func (x *ListContentItemsResponse_ContentItemMetaData) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_pubgolf_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListContentItemsResponse_ContentItemMetaData.ProtoReflect.Descriptor instead.
func (*ListContentItemsResponse_ContentItemMetaData) Descriptor() ([]byte, []int) {
	return file_api_v1_pubgolf_proto_rawDescGZIP(), []int{21, 0}
}

func (x *ListContentItemsResponse_ContentItemMetaData) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ListContentItemsResponse_ContentItemMetaData) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *ListContentItemsResponse_ContentItemMetaData) GetIconKey() string {
	if x != nil {
		return x.IconKey
	}
	return ""
}

func (x *ListContentItemsResponse_ContentItemMetaData) GetIconColor() *Color {
	if x != nil {
		return x.IconColor
	}
	return nil
}

type ListContentItemsResponse_Section struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DisplayName     string                                          `protobuf:"bytes,1,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	ContentSections []*ListContentItemsResponse_ContentItemMetaData `protobuf:"bytes,2,rep,name=content_sections,json=contentSections,proto3" json:"content_sections,omitempty"`
	// icon_key is an SF-Symbol name (e.g. "heart.fill").
	IconKey   string `protobuf:"bytes,3,opt,name=icon_key,json=iconKey,proto3" json:"icon_key,omitempty"`
	IconColor *Color `protobuf:"bytes,4,opt,name=icon_color,json=iconColor,proto3" json:"icon_color,omitempty"`
}

func (x *ListContentItemsResponse_Section) Reset() {
	*x = ListContentItemsResponse_Section{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_pubgolf_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListContentItemsResponse_Section) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListContentItemsResponse_Section) ProtoMessage() {}

func (x *ListContentItemsResponse_Section) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_pubgolf_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListContentItemsResponse_Section.ProtoReflect.Descriptor instead.
func (*ListContentItemsResponse_Section) Descriptor() ([]byte, []int) {
	return file_api_v1_pubgolf_proto_rawDescGZIP(), []int{21, 1}
}

func (x *ListContentItemsResponse_Section) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *ListContentItemsResponse_Section) GetContentSections() []*ListContentItemsResponse_ContentItemMetaData {
	if x != nil {
		return x.ContentSections
	}
	return nil
}

func (x *ListContentItemsResponse_Section) GetIconKey() string {
	if x != nil {
		return x.IconKey
	}
	return ""
}

func (x *ListContentItemsResponse_Section) GetIconColor() *Color {
	if x != nil {
		return x.IconColor
	}
	return nil
}

var File_api_v1_pubgolf_proto protoreflect.FileDescriptor

var file_api_v1_pubgolf_proto_rawDesc = []byte{
	0x0a, 0x14, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x75, 0x62, 0x67, 0x6f, 0x6c, 0x66,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x1a, 0x13,
	0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x3d, 0x0a, 0x14, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x22, 0xf2, 0x01, 0x0a, 0x15, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a,
	0x0e, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x0d, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x22, 0x84, 0x01, 0x0a, 0x0d, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x1a, 0x56, 0x45, 0x52, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45,
	0x44, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x56, 0x45, 0x52, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x4f, 0x4b, 0x10, 0x01, 0x12, 0x1b, 0x0a, 0x17, 0x56, 0x45,
	0x52, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x4f, 0x55, 0x54,
	0x44, 0x41, 0x54, 0x45, 0x44, 0x10, 0x02, 0x12, 0x1f, 0x0a, 0x1b, 0x56, 0x45, 0x52, 0x53, 0x49,
	0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x49, 0x4e, 0x43, 0x4f, 0x4d, 0x50,
	0x41, 0x54, 0x49, 0x42, 0x4c, 0x45, 0x10, 0x03, 0x22, 0x79, 0x0a, 0x21, 0x50, 0x75, 0x62, 0x47,
	0x6f, 0x6c, 0x66, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a,
	0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x33, 0x0a, 0x0b, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x3a,
	0x02, 0x18, 0x01, 0x22, 0x50, 0x0a, 0x22, 0x50, 0x75, 0x62, 0x47, 0x6f, 0x6c, 0x66, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x06, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x06, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x3a, 0x02, 0x18, 0x01, 0x22, 0x3c, 0x0a, 0x17, 0x53, 0x74, 0x61, 0x72, 0x74, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x21, 0x0a, 0x0c, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x22, 0x1a, 0x0a, 0x18, 0x53, 0x74, 0x61, 0x72, 0x74, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x5c, 0x0a, 0x1a, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a,
	0x0c, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x1b, 0x0a, 0x09, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x75, 0x74, 0x68, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x64, 0x0a,
	0x1b, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x06,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x06, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x75, 0x74, 0x68, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x22, 0x14, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x3d, 0x0a, 0x13, 0x47, 0x65, 0x74,
	0x4d, 0x79, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x26, 0x0a, 0x06, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x52, 0x06, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x22, 0x2f, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x22, 0x3b, 0x0a, 0x11, 0x47, 0x65, 0x74,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26,
	0x0a, 0x06, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x06,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x22, 0x82, 0x01, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x48, 0x0a, 0x12, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x11, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x66, 0x0a, 0x1a, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x12, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x11, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x5e, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0x42, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x26, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x7e, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x53, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a,
	0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x33, 0x0a, 0x13, 0x63, 0x61,
	0x63, 0x68, 0x65, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00, 0x52, 0x11, 0x63, 0x61, 0x63, 0x68, 0x65,
	0x64, 0x44, 0x61, 0x74, 0x61, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x42,
	0x16, 0x0a, 0x14, 0x5f, 0x63, 0x61, 0x63, 0x68, 0x65, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xd1, 0x04, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x53,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x2e, 0x0a, 0x13, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x6c, 0x61,
	0x74, 0x65, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x45, 0x0a, 0x08, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x48, 0x00, 0x52, 0x08, 0x73, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x1a, 0xb5, 0x03, 0x0a, 0x08, 0x53, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x76, 0x69, 0x73, 0x69, 0x74, 0x65, 0x64, 0x5f, 0x76,
	0x65, 0x6e, 0x75, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x52,
	0x10, 0x76, 0x69, 0x73, 0x69, 0x74, 0x65, 0x64, 0x56, 0x65, 0x6e, 0x75, 0x65, 0x4b, 0x65, 0x79,
	0x73, 0x12, 0x2f, 0x0a, 0x11, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x65, 0x6e,
	0x75, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00, 0x52, 0x0f,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x6e, 0x75, 0x65, 0x4b, 0x65, 0x79, 0x88,
	0x01, 0x01, 0x12, 0x29, 0x0a, 0x0e, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x76, 0x65, 0x6e, 0x75, 0x65,
	0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x01, 0x52, 0x0c, 0x6e, 0x65,
	0x78, 0x74, 0x56, 0x65, 0x6e, 0x75, 0x65, 0x4b, 0x65, 0x79, 0x88, 0x01, 0x01, 0x12, 0x49, 0x0a,
	0x10, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x48, 0x02, 0x52, 0x0e, 0x6e, 0x65, 0x78, 0x74, 0x56, 0x65, 0x6e, 0x75, 0x65,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x88, 0x01, 0x01, 0x12, 0x37, 0x0a, 0x09, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x5f, 0x65, 0x6e, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x45, 0x6e,
	0x64, 0x12, 0x3f, 0x0a, 0x19, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x65, 0x6e,
	0x75, 0x65, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x17, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x56,
	0x65, 0x6e, 0x75, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x88,
	0x01, 0x01, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x76,
	0x65, 0x6e, 0x75, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x6e, 0x65, 0x78,
	0x74, 0x5f, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x42, 0x13, 0x0a, 0x11, 0x5f,
	0x6e, 0x65, 0x78, 0x74, 0x5f, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x42, 0x1c, 0x0a, 0x1a, 0x5f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x65, 0x6e,
	0x75, 0x65, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0b,
	0x0a, 0x09, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x22, 0x4d, 0x0a, 0x0f, 0x47,
	0x65, 0x74, 0x56, 0x65, 0x6e, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x76,
	0x65, 0x6e, 0x75, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0d, 0x52,
	0x09, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x4b, 0x65, 0x79, 0x73, 0x22, 0xf6, 0x01, 0x0a, 0x10, 0x47,
	0x65, 0x74, 0x56, 0x65, 0x6e, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x3c, 0x0a, 0x06, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x65, 0x6e, 0x75,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x56, 0x65, 0x6e, 0x75, 0x65, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x73, 0x1a, 0x42, 0x0a,
	0x0c, 0x56, 0x65, 0x6e, 0x75, 0x65, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x12, 0x28, 0x0a,
	0x05, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x6e, 0x75, 0x65, 0x48, 0x00, 0x52, 0x05, 0x76,
	0x65, 0x6e, 0x75, 0x65, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x76, 0x65, 0x6e, 0x75,
	0x65, 0x1a, 0x60, 0x0a, 0x0b, 0x56, 0x65, 0x6e, 0x75, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x3b, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x65,
	0x6e, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x56, 0x65, 0x6e, 0x75,
	0x65, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0x36, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x4b, 0x65, 0x79, 0x22, 0xcd, 0x03, 0x0a, 0x18,
	0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x08, 0x73, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x49,
	0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x91,
	0x01, 0x0a, 0x13, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x4d, 0x65,
	0x74, 0x61, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61,
	0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69,
	0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x63, 0x6f,
	0x6e, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x63, 0x6f,
	0x6e, 0x4b, 0x65, 0x79, 0x12, 0x2c, 0x0a, 0x0a, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x6c,
	0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x52, 0x09, 0x69, 0x63, 0x6f, 0x6e, 0x43, 0x6f, 0x6c,
	0x6f, 0x72, 0x1a, 0xd6, 0x01, 0x0a, 0x07, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21,
	0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x5f, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x4d, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x63, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x12, 0x2c, 0x0a,
	0x0a, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6c, 0x6f, 0x72,
	0x52, 0x09, 0x69, 0x63, 0x6f, 0x6e, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x22, 0x27, 0x0a, 0x15, 0x47,
	0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x32, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x6f, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x53,
	0x63, 0x6f, 0x72, 0x65, 0x73, 0x46, 0x6f, 0x72, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x4b, 0x65, 0x79, 0x12, 0x33, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x63, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52,
	0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x22, 0x53, 0x0a, 0x1c, 0x47, 0x65, 0x74,
	0x53, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x46, 0x6f, 0x72, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x0b, 0x73, 0x63, 0x6f,
	0x72, 0x65, 0x5f, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x42, 0x6f, 0x61,
	0x72, 0x64, 0x52, 0x0a, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x22, 0x55,
	0x0a, 0x19, 0x47, 0x65, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x46, 0x6f, 0x72, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x49, 0x64, 0x22, 0x51, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x53, 0x63, 0x6f, 0x72,
	0x65, 0x73, 0x46, 0x6f, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x0b, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x0a, 0x73, 0x63,
	0x6f, 0x72, 0x65, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x22, 0x52, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x53,
	0x63, 0x6f, 0x72, 0x65, 0x73, 0x46, 0x6f, 0x72, 0x56, 0x65, 0x6e, 0x75, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x4b, 0x65,
	0x79, 0x12, 0x19, 0x0a, 0x08, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x49, 0x64, 0x22, 0x50, 0x0a, 0x19,
	0x47, 0x65, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x46, 0x6f, 0x72, 0x56, 0x65, 0x6e, 0x75,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x0b, 0x73, 0x63, 0x6f,
	0x72, 0x65, 0x5f, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x42, 0x6f, 0x61,
	0x72, 0x64, 0x52, 0x0a, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x32, 0xa4,
	0x0a, 0x0a, 0x0e, 0x50, 0x75, 0x62, 0x47, 0x6f, 0x6c, 0x66, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x4e, 0x0a, 0x0d, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x6a, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x12, 0x29, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75, 0x62, 0x47, 0x6f,
	0x6c, 0x66, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75, 0x62, 0x47, 0x6f, 0x6c, 0x66, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x03, 0x88, 0x02, 0x01, 0x12, 0x57, 0x0a,
	0x10, 0x53, 0x74, 0x61, 0x72, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x12, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x60, 0x0a, 0x13, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65,
	0x74, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x22, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6c,
	0x65, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x4d,
	0x79, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x1a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x4d, 0x79, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x42, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12,
	0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5d, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x57, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x48,
	0x0a, 0x0b, 0x47, 0x65, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x1a, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3f, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x56,
	0x65, 0x6e, 0x75, 0x65, 0x12, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x56, 0x65, 0x6e, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x65, 0x6e, 0x75, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x57, 0x0a, 0x10, 0x4c, 0x69, 0x73,
	0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x1f, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x51, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x49, 0x74, 0x65, 0x6d, 0x12, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x63, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x53, 0x63, 0x6f, 0x72,
	0x65, 0x73, 0x46, 0x6f, 0x72, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x23, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x73,
	0x46, 0x6f, 0x72, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53,
	0x63, 0x6f, 0x72, 0x65, 0x73, 0x46, 0x6f, 0x72, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5d, 0x0a, 0x12, 0x47, 0x65,
	0x74, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x46, 0x6f, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x12, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x73, 0x46, 0x6f, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x53, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x46, 0x6f, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5a, 0x0a, 0x11, 0x47, 0x65, 0x74,
	0x53, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x46, 0x6f, 0x72, 0x56, 0x65, 0x6e, 0x75, 0x65, 0x12, 0x20,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x65,
	0x73, 0x46, 0x6f, 0x72, 0x56, 0x65, 0x6e, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x73, 0x46, 0x6f, 0x72, 0x56, 0x65, 0x6e, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x40, 0x5a, 0x3e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x75, 0x62, 0x67, 0x6f, 0x6c, 0x66, 0x2f, 0x70, 0x75, 0x62, 0x67,
	0x6f, 0x6c, 0x66, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x2f, 0x6c, 0x69, 0x62, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76,
	0x31, 0x3b, 0x61, 0x70, 0x69, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_v1_pubgolf_proto_rawDescOnce sync.Once
	file_api_v1_pubgolf_proto_rawDescData = file_api_v1_pubgolf_proto_rawDesc
)

func file_api_v1_pubgolf_proto_rawDescGZIP() []byte {
	file_api_v1_pubgolf_proto_rawDescOnce.Do(func() {
		file_api_v1_pubgolf_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_v1_pubgolf_proto_rawDescData)
	})
	return file_api_v1_pubgolf_proto_rawDescData
}

var file_api_v1_pubgolf_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_api_v1_pubgolf_proto_msgTypes = make([]protoimpl.MessageInfo, 35)
var file_api_v1_pubgolf_proto_goTypes = []interface{}{
	(ClientVersionResponse_VersionStatus)(0),             // 0: api.v1.ClientVersionResponse.VersionStatus
	(*ClientVersionRequest)(nil),                         // 1: api.v1.ClientVersionRequest
	(*ClientVersionResponse)(nil),                        // 2: api.v1.ClientVersionResponse
	(*PubGolfServiceCreatePlayerRequest)(nil),            // 3: api.v1.PubGolfServiceCreatePlayerRequest
	(*PubGolfServiceCreatePlayerResponse)(nil),           // 4: api.v1.PubGolfServiceCreatePlayerResponse
	(*StartPlayerLoginRequest)(nil),                      // 5: api.v1.StartPlayerLoginRequest
	(*StartPlayerLoginResponse)(nil),                     // 6: api.v1.StartPlayerLoginResponse
	(*CompletePlayerLoginRequest)(nil),                   // 7: api.v1.CompletePlayerLoginRequest
	(*CompletePlayerLoginResponse)(nil),                  // 8: api.v1.CompletePlayerLoginResponse
	(*GetMyPlayerRequest)(nil),                           // 9: api.v1.GetMyPlayerRequest
	(*GetMyPlayerResponse)(nil),                          // 10: api.v1.GetMyPlayerResponse
	(*GetPlayerRequest)(nil),                             // 11: api.v1.GetPlayerRequest
	(*GetPlayerResponse)(nil),                            // 12: api.v1.GetPlayerResponse
	(*UpdateRegistrationRequest)(nil),                    // 13: api.v1.UpdateRegistrationRequest
	(*UpdateRegistrationResponse)(nil),                   // 14: api.v1.UpdateRegistrationResponse
	(*UpdatePlayerDataRequest)(nil),                      // 15: api.v1.UpdatePlayerDataRequest
	(*UpdatePlayerDataResponse)(nil),                     // 16: api.v1.UpdatePlayerDataResponse
	(*GetScheduleRequest)(nil),                           // 17: api.v1.GetScheduleRequest
	(*GetScheduleResponse)(nil),                          // 18: api.v1.GetScheduleResponse
	(*GetVenueRequest)(nil),                              // 19: api.v1.GetVenueRequest
	(*GetVenueResponse)(nil),                             // 20: api.v1.GetVenueResponse
	(*ListContentItemsRequest)(nil),                      // 21: api.v1.ListContentItemsRequest
	(*ListContentItemsResponse)(nil),                     // 22: api.v1.ListContentItemsResponse
	(*GetContentItemRequest)(nil),                        // 23: api.v1.GetContentItemRequest
	(*GetContentItemResponse)(nil),                       // 24: api.v1.GetContentItemResponse
	(*GetScoresForCategoryRequest)(nil),                  // 25: api.v1.GetScoresForCategoryRequest
	(*GetScoresForCategoryResponse)(nil),                 // 26: api.v1.GetScoresForCategoryResponse
	(*GetScoresForPlayerRequest)(nil),                    // 27: api.v1.GetScoresForPlayerRequest
	(*GetScoresForPlayerResponse)(nil),                   // 28: api.v1.GetScoresForPlayerResponse
	(*GetScoresForVenueRequest)(nil),                     // 29: api.v1.GetScoresForVenueRequest
	(*GetScoresForVenueResponse)(nil),                    // 30: api.v1.GetScoresForVenueResponse
	(*GetScheduleResponse_Schedule)(nil),                 // 31: api.v1.GetScheduleResponse.Schedule
	(*GetVenueResponse_VenueWrapper)(nil),                // 32: api.v1.GetVenueResponse.VenueWrapper
	nil,                                                  // 33: api.v1.GetVenueResponse.VenuesEntry
	(*ListContentItemsResponse_ContentItemMetaData)(nil), // 34: api.v1.ListContentItemsResponse.ContentItemMetaData
	(*ListContentItemsResponse_Section)(nil),             // 35: api.v1.ListContentItemsResponse.Section
	(*PlayerData)(nil),                                   // 36: api.v1.PlayerData
	(*Player)(nil),                                       // 37: api.v1.Player
	(*EventRegistration)(nil),                            // 38: api.v1.EventRegistration
	(ScoringCategory)(0),                                 // 39: api.v1.ScoringCategory
	(*ScoreBoard)(nil),                                   // 40: api.v1.ScoreBoard
	(*timestamppb.Timestamp)(nil),                        // 41: google.protobuf.Timestamp
	(*Venue)(nil),                                        // 42: api.v1.Venue
	(*Color)(nil),                                        // 43: api.v1.Color
}
var file_api_v1_pubgolf_proto_depIdxs = []int32{
	0,  // 0: api.v1.ClientVersionResponse.version_status:type_name -> api.v1.ClientVersionResponse.VersionStatus
	36, // 1: api.v1.PubGolfServiceCreatePlayerRequest.player_data:type_name -> api.v1.PlayerData
	37, // 2: api.v1.PubGolfServiceCreatePlayerResponse.player:type_name -> api.v1.Player
	37, // 3: api.v1.CompletePlayerLoginResponse.player:type_name -> api.v1.Player
	37, // 4: api.v1.GetMyPlayerResponse.player:type_name -> api.v1.Player
	37, // 5: api.v1.GetPlayerResponse.player:type_name -> api.v1.Player
	38, // 6: api.v1.UpdateRegistrationRequest.event_registration:type_name -> api.v1.EventRegistration
	38, // 7: api.v1.UpdateRegistrationResponse.event_registration:type_name -> api.v1.EventRegistration
	36, // 8: api.v1.UpdatePlayerDataRequest.data:type_name -> api.v1.PlayerData
	36, // 9: api.v1.UpdatePlayerDataResponse.data:type_name -> api.v1.PlayerData
	31, // 10: api.v1.GetScheduleResponse.schedule:type_name -> api.v1.GetScheduleResponse.Schedule
	33, // 11: api.v1.GetVenueResponse.venues:type_name -> api.v1.GetVenueResponse.VenuesEntry
	35, // 12: api.v1.ListContentItemsResponse.sections:type_name -> api.v1.ListContentItemsResponse.Section
	39, // 13: api.v1.GetScoresForCategoryRequest.category:type_name -> api.v1.ScoringCategory
	40, // 14: api.v1.GetScoresForCategoryResponse.score_board:type_name -> api.v1.ScoreBoard
	40, // 15: api.v1.GetScoresForPlayerResponse.score_board:type_name -> api.v1.ScoreBoard
	40, // 16: api.v1.GetScoresForVenueResponse.score_board:type_name -> api.v1.ScoreBoard
	41, // 17: api.v1.GetScheduleResponse.Schedule.next_venue_start:type_name -> google.protobuf.Timestamp
	41, // 18: api.v1.GetScheduleResponse.Schedule.event_end:type_name -> google.protobuf.Timestamp
	42, // 19: api.v1.GetVenueResponse.VenueWrapper.venue:type_name -> api.v1.Venue
	32, // 20: api.v1.GetVenueResponse.VenuesEntry.value:type_name -> api.v1.GetVenueResponse.VenueWrapper
	43, // 21: api.v1.ListContentItemsResponse.ContentItemMetaData.icon_color:type_name -> api.v1.Color
	34, // 22: api.v1.ListContentItemsResponse.Section.content_sections:type_name -> api.v1.ListContentItemsResponse.ContentItemMetaData
	43, // 23: api.v1.ListContentItemsResponse.Section.icon_color:type_name -> api.v1.Color
	1,  // 24: api.v1.PubGolfService.ClientVersion:input_type -> api.v1.ClientVersionRequest
	3,  // 25: api.v1.PubGolfService.CreatePlayer:input_type -> api.v1.PubGolfServiceCreatePlayerRequest
	5,  // 26: api.v1.PubGolfService.StartPlayerLogin:input_type -> api.v1.StartPlayerLoginRequest
	7,  // 27: api.v1.PubGolfService.CompletePlayerLogin:input_type -> api.v1.CompletePlayerLoginRequest
	9,  // 28: api.v1.PubGolfService.GetMyPlayer:input_type -> api.v1.GetMyPlayerRequest
	11, // 29: api.v1.PubGolfService.GetPlayer:input_type -> api.v1.GetPlayerRequest
	13, // 30: api.v1.PubGolfService.UpdateRegistration:input_type -> api.v1.UpdateRegistrationRequest
	15, // 31: api.v1.PubGolfService.UpdatePlayerData:input_type -> api.v1.UpdatePlayerDataRequest
	17, // 32: api.v1.PubGolfService.GetSchedule:input_type -> api.v1.GetScheduleRequest
	19, // 33: api.v1.PubGolfService.GetVenue:input_type -> api.v1.GetVenueRequest
	21, // 34: api.v1.PubGolfService.ListContentItems:input_type -> api.v1.ListContentItemsRequest
	23, // 35: api.v1.PubGolfService.GetContentItem:input_type -> api.v1.GetContentItemRequest
	25, // 36: api.v1.PubGolfService.GetScoresForCategory:input_type -> api.v1.GetScoresForCategoryRequest
	27, // 37: api.v1.PubGolfService.GetScoresForPlayer:input_type -> api.v1.GetScoresForPlayerRequest
	29, // 38: api.v1.PubGolfService.GetScoresForVenue:input_type -> api.v1.GetScoresForVenueRequest
	2,  // 39: api.v1.PubGolfService.ClientVersion:output_type -> api.v1.ClientVersionResponse
	4,  // 40: api.v1.PubGolfService.CreatePlayer:output_type -> api.v1.PubGolfServiceCreatePlayerResponse
	6,  // 41: api.v1.PubGolfService.StartPlayerLogin:output_type -> api.v1.StartPlayerLoginResponse
	8,  // 42: api.v1.PubGolfService.CompletePlayerLogin:output_type -> api.v1.CompletePlayerLoginResponse
	10, // 43: api.v1.PubGolfService.GetMyPlayer:output_type -> api.v1.GetMyPlayerResponse
	12, // 44: api.v1.PubGolfService.GetPlayer:output_type -> api.v1.GetPlayerResponse
	14, // 45: api.v1.PubGolfService.UpdateRegistration:output_type -> api.v1.UpdateRegistrationResponse
	16, // 46: api.v1.PubGolfService.UpdatePlayerData:output_type -> api.v1.UpdatePlayerDataResponse
	18, // 47: api.v1.PubGolfService.GetSchedule:output_type -> api.v1.GetScheduleResponse
	20, // 48: api.v1.PubGolfService.GetVenue:output_type -> api.v1.GetVenueResponse
	22, // 49: api.v1.PubGolfService.ListContentItems:output_type -> api.v1.ListContentItemsResponse
	24, // 50: api.v1.PubGolfService.GetContentItem:output_type -> api.v1.GetContentItemResponse
	26, // 51: api.v1.PubGolfService.GetScoresForCategory:output_type -> api.v1.GetScoresForCategoryResponse
	28, // 52: api.v1.PubGolfService.GetScoresForPlayer:output_type -> api.v1.GetScoresForPlayerResponse
	30, // 53: api.v1.PubGolfService.GetScoresForVenue:output_type -> api.v1.GetScoresForVenueResponse
	39, // [39:54] is the sub-list for method output_type
	24, // [24:39] is the sub-list for method input_type
	24, // [24:24] is the sub-list for extension type_name
	24, // [24:24] is the sub-list for extension extendee
	0,  // [0:24] is the sub-list for field type_name
}

func init() { file_api_v1_pubgolf_proto_init() }
func file_api_v1_pubgolf_proto_init() {
	if File_api_v1_pubgolf_proto != nil {
		return
	}
	file_api_v1_shared_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_api_v1_pubgolf_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientVersionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_pubgolf_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientVersionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_pubgolf_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PubGolfServiceCreatePlayerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_pubgolf_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PubGolfServiceCreatePlayerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_pubgolf_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartPlayerLoginRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_pubgolf_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartPlayerLoginResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_pubgolf_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompletePlayerLoginRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_pubgolf_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompletePlayerLoginResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_pubgolf_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMyPlayerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_pubgolf_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMyPlayerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_pubgolf_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPlayerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_pubgolf_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPlayerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_pubgolf_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRegistrationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_pubgolf_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRegistrationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_pubgolf_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePlayerDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_pubgolf_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePlayerDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_pubgolf_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetScheduleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_pubgolf_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetScheduleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_pubgolf_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVenueRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_pubgolf_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVenueResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_pubgolf_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListContentItemsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_pubgolf_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListContentItemsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_pubgolf_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetContentItemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_pubgolf_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetContentItemResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_pubgolf_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetScoresForCategoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_pubgolf_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetScoresForCategoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_pubgolf_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetScoresForPlayerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_pubgolf_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetScoresForPlayerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_pubgolf_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetScoresForVenueRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_pubgolf_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetScoresForVenueResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_pubgolf_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetScheduleResponse_Schedule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_pubgolf_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVenueResponse_VenueWrapper); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_pubgolf_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListContentItemsResponse_ContentItemMetaData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_pubgolf_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListContentItemsResponse_Section); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_api_v1_pubgolf_proto_msgTypes[16].OneofWrappers = []interface{}{}
	file_api_v1_pubgolf_proto_msgTypes[17].OneofWrappers = []interface{}{}
	file_api_v1_pubgolf_proto_msgTypes[30].OneofWrappers = []interface{}{}
	file_api_v1_pubgolf_proto_msgTypes[31].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_v1_pubgolf_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   35,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_v1_pubgolf_proto_goTypes,
		DependencyIndexes: file_api_v1_pubgolf_proto_depIdxs,
		EnumInfos:         file_api_v1_pubgolf_proto_enumTypes,
		MessageInfos:      file_api_v1_pubgolf_proto_msgTypes,
	}.Build()
	File_api_v1_pubgolf_proto = out.File
	file_api_v1_pubgolf_proto_rawDesc = nil
	file_api_v1_pubgolf_proto_goTypes = nil
	file_api_v1_pubgolf_proto_depIdxs = nil
}
