// Shared contains objects used across methods in multiple services.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        (unknown)
// source: api/v1/shared.proto

package apiv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ScoringCategory int32

const (
	ScoringCategory_SCORING_CATEGORY_UNSPECIFIED         ScoringCategory = 0
	ScoringCategory_SCORING_CATEGORY_PUB_GOLF_NINE_HOLE  ScoringCategory = 1
	ScoringCategory_SCORING_CATEGORY_PUB_GOLF_FIVE_HOLE  ScoringCategory = 2
	ScoringCategory_SCORING_CATEGORY_PUB_GOLF_CHALLENGES ScoringCategory = 3
)

// Enum value maps for ScoringCategory.
var (
	ScoringCategory_name = map[int32]string{
		0: "SCORING_CATEGORY_UNSPECIFIED",
		1: "SCORING_CATEGORY_PUB_GOLF_NINE_HOLE",
		2: "SCORING_CATEGORY_PUB_GOLF_FIVE_HOLE",
		3: "SCORING_CATEGORY_PUB_GOLF_CHALLENGES",
	}
	ScoringCategory_value = map[string]int32{
		"SCORING_CATEGORY_UNSPECIFIED":         0,
		"SCORING_CATEGORY_PUB_GOLF_NINE_HOLE":  1,
		"SCORING_CATEGORY_PUB_GOLF_FIVE_HOLE":  2,
		"SCORING_CATEGORY_PUB_GOLF_CHALLENGES": 3,
	}
)

func (x ScoringCategory) Enum() *ScoringCategory {
	p := new(ScoringCategory)
	*p = x
	return p
}

func (x ScoringCategory) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ScoringCategory) Descriptor() protoreflect.EnumDescriptor {
	return file_api_v1_shared_proto_enumTypes[0].Descriptor()
}

func (ScoringCategory) Type() protoreflect.EnumType {
	return &file_api_v1_shared_proto_enumTypes[0]
}

func (x ScoringCategory) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ScoringCategory.Descriptor instead.
func (ScoringCategory) EnumDescriptor() ([]byte, []int) {
	return file_api_v1_shared_proto_rawDescGZIP(), []int{0}
}

type ScoreBoard_ScoreStatus int32

const (
	ScoreBoard_SCORE_STATUS_UNSPECIFIED ScoreBoard_ScoreStatus = 0
	// SCORE_STATUS_PENDING indicates the player has not yet submitted/finalized their score for this round.
	ScoreBoard_SCORE_STATUS_PENDING ScoreBoard_ScoreStatus = 1
	// SCORE_STATUS_FINALIZED indicates that a player's score is "locked in" as of a given milestone.
	ScoreBoard_SCORE_STATUS_FINALIZED ScoreBoard_ScoreStatus = 2
	// SCORE_STATUS_INCOMPLETE indicates that a player's score is in an invalid or non-comparable state (e.g. they have dropped out of the event).
	ScoreBoard_SCORE_STATUS_INCOMPLETE ScoreBoard_ScoreStatus = 3
	// SCORE_STATUS_NON_SCORING indicates that a player's score will not be counted towards the overall leaderboard.
	ScoreBoard_SCORE_STATUS_NON_SCORING ScoreBoard_ScoreStatus = 4
)

// Enum value maps for ScoreBoard_ScoreStatus.
var (
	ScoreBoard_ScoreStatus_name = map[int32]string{
		0: "SCORE_STATUS_UNSPECIFIED",
		1: "SCORE_STATUS_PENDING",
		2: "SCORE_STATUS_FINALIZED",
		3: "SCORE_STATUS_INCOMPLETE",
		4: "SCORE_STATUS_NON_SCORING",
	}
	ScoreBoard_ScoreStatus_value = map[string]int32{
		"SCORE_STATUS_UNSPECIFIED": 0,
		"SCORE_STATUS_PENDING":     1,
		"SCORE_STATUS_FINALIZED":   2,
		"SCORE_STATUS_INCOMPLETE":  3,
		"SCORE_STATUS_NON_SCORING": 4,
	}
)

func (x ScoreBoard_ScoreStatus) Enum() *ScoreBoard_ScoreStatus {
	p := new(ScoreBoard_ScoreStatus)
	*p = x
	return p
}

func (x ScoreBoard_ScoreStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ScoreBoard_ScoreStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_api_v1_shared_proto_enumTypes[1].Descriptor()
}

func (ScoreBoard_ScoreStatus) Type() protoreflect.EnumType {
	return &file_api_v1_shared_proto_enumTypes[1]
}

func (x ScoreBoard_ScoreStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ScoreBoard_ScoreStatus.Descriptor instead.
func (ScoreBoard_ScoreStatus) EnumDescriptor() ([]byte, []int) {
	return file_api_v1_shared_proto_rawDescGZIP(), []int{4, 0}
}

type Color struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	R float32 `protobuf:"fixed32,1,opt,name=r,proto3" json:"r,omitempty"`
	G float32 `protobuf:"fixed32,2,opt,name=g,proto3" json:"g,omitempty"`
	B float32 `protobuf:"fixed32,3,opt,name=b,proto3" json:"b,omitempty"`
	A float32 `protobuf:"fixed32,4,opt,name=a,proto3" json:"a,omitempty"`
}

func (x *Color) Reset() {
	*x = Color{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_shared_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Color) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Color) ProtoMessage() {}

func (x *Color) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_shared_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Color.ProtoReflect.Descriptor instead.
func (*Color) Descriptor() ([]byte, []int) {
	return file_api_v1_shared_proto_rawDescGZIP(), []int{0}
}

func (x *Color) GetR() float32 {
	if x != nil {
		return x.R
	}
	return 0
}

func (x *Color) GetG() float32 {
	if x != nil {
		return x.G
	}
	return 0
}

func (x *Color) GetB() float32 {
	if x != nil {
		return x.B
	}
	return 0
}

func (x *Color) GetA() float32 {
	if x != nil {
		return x.A
	}
	return 0
}

type Venue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Global ID for the venue in ULID format (26 characters, base32), not to be confused with the venue key.
	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Address string suitable for display or using for a mapping query.
	Address  string `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	ImageUrl string `protobuf:"bytes,4,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
}

func (x *Venue) Reset() {
	*x = Venue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_shared_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Venue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Venue) ProtoMessage() {}

func (x *Venue) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_shared_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Venue.ProtoReflect.Descriptor instead.
func (*Venue) Descriptor() ([]byte, []int) {
	return file_api_v1_shared_proto_rawDescGZIP(), []int{1}
}

func (x *Venue) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Venue) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Venue) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Venue) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

type Player struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string      `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Data *PlayerData `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *Player) Reset() {
	*x = Player{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_shared_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Player) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Player) ProtoMessage() {}

func (x *Player) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_shared_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Player.ProtoReflect.Descriptor instead.
func (*Player) Descriptor() ([]byte, []int) {
	return file_api_v1_shared_proto_rawDescGZIP(), []int{2}
}

func (x *Player) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Player) GetData() *PlayerData {
	if x != nil {
		return x.Data
	}
	return nil
}

// PlayerData contains the user-editable fields for a player.
type PlayerData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name            string          `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ScoringCategory ScoringCategory `protobuf:"varint,2,opt,name=scoring_category,json=scoringCategory,proto3,enum=api.v1.ScoringCategory" json:"scoring_category,omitempty"`
}

func (x *PlayerData) Reset() {
	*x = PlayerData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_shared_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerData) ProtoMessage() {}

func (x *PlayerData) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_shared_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerData.ProtoReflect.Descriptor instead.
func (*PlayerData) Descriptor() ([]byte, []int) {
	return file_api_v1_shared_proto_rawDescGZIP(), []int{3}
}

func (x *PlayerData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PlayerData) GetScoringCategory() ScoringCategory {
	if x != nil {
		return x.ScoringCategory
	}
	return ScoringCategory_SCORING_CATEGORY_UNSPECIFIED
}

type ScoreBoard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scores []*ScoreBoard_ScoreBoardEntry `protobuf:"bytes,1,rep,name=scores,proto3" json:"scores,omitempty"`
}

func (x *ScoreBoard) Reset() {
	*x = ScoreBoard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_shared_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScoreBoard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScoreBoard) ProtoMessage() {}

func (x *ScoreBoard) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_shared_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScoreBoard.ProtoReflect.Descriptor instead.
func (*ScoreBoard) Descriptor() ([]byte, []int) {
	return file_api_v1_shared_proto_rawDescGZIP(), []int{4}
}

func (x *ScoreBoard) GetScores() []*ScoreBoard_ScoreBoardEntry {
	if x != nil {
		return x.Scores
	}
	return nil
}

type ScoreBoard_ScoreBoardEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityId *string `protobuf:"bytes,1,opt,name=entity_id,json=entityId,proto3,oneof" json:"entity_id,omitempty"`
	Label    string  `protobuf:"bytes,2,opt,name=label,proto3" json:"label,omitempty"`
	Score    int32   `protobuf:"varint,3,opt,name=score,proto3" json:"score,omitempty"`
	// display_score_signed indicates that non-zero scores should be displayed with an explicit +/-.
	DisplayScoreSigned bool `protobuf:"varint,4,opt,name=display_score_signed,json=displayScoreSigned,proto3" json:"display_score_signed,omitempty"`
	// rank is a display value indicating the ranking of the score. May be omitted in the case of ties, so ordering should be done based on the index of the `ScoreBoardEntry` in the repated field `Scoreboard.scores`.
	Rank *uint32 `protobuf:"varint,5,opt,name=rank,proto3,oneof" json:"rank,omitempty"`
	// icon_key is an SF-Symbol name (e.g. "heart.fill").
	IconKey       *string                `protobuf:"bytes,6,opt,name=icon_key,json=iconKey,proto3,oneof" json:"icon_key,omitempty"`
	IconColor     *Color                 `protobuf:"bytes,7,opt,name=icon_color,json=iconColor,proto3,oneof" json:"icon_color,omitempty"`
	Status        ScoreBoard_ScoreStatus `protobuf:"varint,8,opt,name=status,proto3,enum=api.v1.ScoreBoard_ScoreStatus" json:"status,omitempty"`
	StatusDetails *string                `protobuf:"bytes,9,opt,name=status_details,json=statusDetails,proto3,oneof" json:"status_details,omitempty"`
}

func (x *ScoreBoard_ScoreBoardEntry) Reset() {
	*x = ScoreBoard_ScoreBoardEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_shared_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScoreBoard_ScoreBoardEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScoreBoard_ScoreBoardEntry) ProtoMessage() {}

func (x *ScoreBoard_ScoreBoardEntry) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_shared_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScoreBoard_ScoreBoardEntry.ProtoReflect.Descriptor instead.
func (*ScoreBoard_ScoreBoardEntry) Descriptor() ([]byte, []int) {
	return file_api_v1_shared_proto_rawDescGZIP(), []int{4, 0}
}

func (x *ScoreBoard_ScoreBoardEntry) GetEntityId() string {
	if x != nil && x.EntityId != nil {
		return *x.EntityId
	}
	return ""
}

func (x *ScoreBoard_ScoreBoardEntry) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *ScoreBoard_ScoreBoardEntry) GetScore() int32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *ScoreBoard_ScoreBoardEntry) GetDisplayScoreSigned() bool {
	if x != nil {
		return x.DisplayScoreSigned
	}
	return false
}

func (x *ScoreBoard_ScoreBoardEntry) GetRank() uint32 {
	if x != nil && x.Rank != nil {
		return *x.Rank
	}
	return 0
}

func (x *ScoreBoard_ScoreBoardEntry) GetIconKey() string {
	if x != nil && x.IconKey != nil {
		return *x.IconKey
	}
	return ""
}

func (x *ScoreBoard_ScoreBoardEntry) GetIconColor() *Color {
	if x != nil {
		return x.IconColor
	}
	return nil
}

func (x *ScoreBoard_ScoreBoardEntry) GetStatus() ScoreBoard_ScoreStatus {
	if x != nil {
		return x.Status
	}
	return ScoreBoard_SCORE_STATUS_UNSPECIFIED
}

func (x *ScoreBoard_ScoreBoardEntry) GetStatusDetails() string {
	if x != nil && x.StatusDetails != nil {
		return *x.StatusDetails
	}
	return ""
}

var File_api_v1_shared_proto protoreflect.FileDescriptor

var file_api_v1_shared_proto_rawDesc = []byte{
	0x0a, 0x13, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x22, 0x3f, 0x0a,
	0x05, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x0c, 0x0a, 0x01, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x01, 0x72, 0x12, 0x0c, 0x0a, 0x01, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x01, 0x67, 0x12, 0x0c, 0x0a, 0x01, 0x62, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x01, 0x62,
	0x12, 0x0c, 0x0a, 0x01, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x01, 0x61, 0x22, 0x62,
	0x0a, 0x05, 0x56, 0x65, 0x6e, 0x75, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75,
	0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55,
	0x72, 0x6c, 0x22, 0x40, 0x0a, 0x06, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x26, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0x64, 0x0a, 0x0a, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x42, 0x0a, 0x10, 0x73, 0x63, 0x6f, 0x72, 0x69, 0x6e,
	0x67, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x6f, 0x72, 0x69, 0x6e,
	0x67, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x0f, 0x73, 0x63, 0x6f, 0x72, 0x69,
	0x6e, 0x67, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x22, 0x91, 0x05, 0x0a, 0x0a, 0x53,
	0x63, 0x6f, 0x72, 0x65, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x12, 0x3a, 0x0a, 0x06, 0x73, 0x63, 0x6f,
	0x72, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x53, 0x63,
	0x6f, 0x72, 0x65, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x73,
	0x63, 0x6f, 0x72, 0x65, 0x73, 0x1a, 0xa7, 0x03, 0x0a, 0x0f, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x42,
	0x6f, 0x61, 0x72, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x20, 0x0a, 0x09, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x14, 0x0a, 0x05, 0x6c,
	0x61, 0x62, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x64, 0x69, 0x73, 0x70, 0x6c,
	0x61, 0x79, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x53, 0x63,
	0x6f, 0x72, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x12, 0x17, 0x0a, 0x04, 0x72, 0x61, 0x6e,
	0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x01, 0x52, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x88,
	0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x07, 0x69, 0x63, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x88,
	0x01, 0x01, 0x12, 0x31, 0x0a, 0x0a, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x48, 0x03, 0x52, 0x09, 0x69, 0x63, 0x6f, 0x6e, 0x43, 0x6f, 0x6c,
	0x6f, 0x72, 0x88, 0x01, 0x01, 0x12, 0x36, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x63, 0x6f, 0x72, 0x65, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2a, 0x0a,
	0x0e, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x0d, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x72, 0x61, 0x6e, 0x6b,
	0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x6b, 0x65, 0x79, 0x42, 0x0d, 0x0a,
	0x0b, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x42, 0x11, 0x0a, 0x0f,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22,
	0x9c, 0x01, 0x0a, 0x0b, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x1c, 0x0a, 0x18, 0x53, 0x43, 0x4f, 0x52, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f,
	0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x18, 0x0a,
	0x14, 0x53, 0x43, 0x4f, 0x52, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x50, 0x45,
	0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x1a, 0x0a, 0x16, 0x53, 0x43, 0x4f, 0x52, 0x45,
	0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x46, 0x49, 0x4e, 0x41, 0x4c, 0x49, 0x5a, 0x45,
	0x44, 0x10, 0x02, 0x12, 0x1b, 0x0a, 0x17, 0x53, 0x43, 0x4f, 0x52, 0x45, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x5f, 0x49, 0x4e, 0x43, 0x4f, 0x4d, 0x50, 0x4c, 0x45, 0x54, 0x45, 0x10, 0x03,
	0x12, 0x1c, 0x0a, 0x18, 0x53, 0x43, 0x4f, 0x52, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x5f, 0x4e, 0x4f, 0x4e, 0x5f, 0x53, 0x43, 0x4f, 0x52, 0x49, 0x4e, 0x47, 0x10, 0x04, 0x2a, 0xaf,
	0x01, 0x0a, 0x0f, 0x53, 0x63, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x12, 0x20, 0x0a, 0x1c, 0x53, 0x43, 0x4f, 0x52, 0x49, 0x4e, 0x47, 0x5f, 0x43, 0x41,
	0x54, 0x45, 0x47, 0x4f, 0x52, 0x59, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49,
	0x45, 0x44, 0x10, 0x00, 0x12, 0x27, 0x0a, 0x23, 0x53, 0x43, 0x4f, 0x52, 0x49, 0x4e, 0x47, 0x5f,
	0x43, 0x41, 0x54, 0x45, 0x47, 0x4f, 0x52, 0x59, 0x5f, 0x50, 0x55, 0x42, 0x5f, 0x47, 0x4f, 0x4c,
	0x46, 0x5f, 0x4e, 0x49, 0x4e, 0x45, 0x5f, 0x48, 0x4f, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x27, 0x0a,
	0x23, 0x53, 0x43, 0x4f, 0x52, 0x49, 0x4e, 0x47, 0x5f, 0x43, 0x41, 0x54, 0x45, 0x47, 0x4f, 0x52,
	0x59, 0x5f, 0x50, 0x55, 0x42, 0x5f, 0x47, 0x4f, 0x4c, 0x46, 0x5f, 0x46, 0x49, 0x56, 0x45, 0x5f,
	0x48, 0x4f, 0x4c, 0x45, 0x10, 0x02, 0x12, 0x28, 0x0a, 0x24, 0x53, 0x43, 0x4f, 0x52, 0x49, 0x4e,
	0x47, 0x5f, 0x43, 0x41, 0x54, 0x45, 0x47, 0x4f, 0x52, 0x59, 0x5f, 0x50, 0x55, 0x42, 0x5f, 0x47,
	0x4f, 0x4c, 0x46, 0x5f, 0x43, 0x48, 0x41, 0x4c, 0x4c, 0x45, 0x4e, 0x47, 0x45, 0x53, 0x10, 0x03,
	0x42, 0x40, 0x5a, 0x3e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70,
	0x75, 0x62, 0x67, 0x6f, 0x6c, 0x66, 0x2f, 0x70, 0x75, 0x62, 0x67, 0x6f, 0x6c, 0x66, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x6c, 0x69, 0x62, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x3b, 0x61, 0x70, 0x69,
	0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_v1_shared_proto_rawDescOnce sync.Once
	file_api_v1_shared_proto_rawDescData = file_api_v1_shared_proto_rawDesc
)

func file_api_v1_shared_proto_rawDescGZIP() []byte {
	file_api_v1_shared_proto_rawDescOnce.Do(func() {
		file_api_v1_shared_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_v1_shared_proto_rawDescData)
	})
	return file_api_v1_shared_proto_rawDescData
}

var file_api_v1_shared_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_api_v1_shared_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_api_v1_shared_proto_goTypes = []interface{}{
	(ScoringCategory)(0),               // 0: api.v1.ScoringCategory
	(ScoreBoard_ScoreStatus)(0),        // 1: api.v1.ScoreBoard.ScoreStatus
	(*Color)(nil),                      // 2: api.v1.Color
	(*Venue)(nil),                      // 3: api.v1.Venue
	(*Player)(nil),                     // 4: api.v1.Player
	(*PlayerData)(nil),                 // 5: api.v1.PlayerData
	(*ScoreBoard)(nil),                 // 6: api.v1.ScoreBoard
	(*ScoreBoard_ScoreBoardEntry)(nil), // 7: api.v1.ScoreBoard.ScoreBoardEntry
}
var file_api_v1_shared_proto_depIdxs = []int32{
	5, // 0: api.v1.Player.data:type_name -> api.v1.PlayerData
	0, // 1: api.v1.PlayerData.scoring_category:type_name -> api.v1.ScoringCategory
	7, // 2: api.v1.ScoreBoard.scores:type_name -> api.v1.ScoreBoard.ScoreBoardEntry
	2, // 3: api.v1.ScoreBoard.ScoreBoardEntry.icon_color:type_name -> api.v1.Color
	1, // 4: api.v1.ScoreBoard.ScoreBoardEntry.status:type_name -> api.v1.ScoreBoard.ScoreStatus
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_api_v1_shared_proto_init() }
func file_api_v1_shared_proto_init() {
	if File_api_v1_shared_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_v1_shared_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Color); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_shared_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Venue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_shared_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Player); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_shared_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_shared_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScoreBoard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_shared_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScoreBoard_ScoreBoardEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_api_v1_shared_proto_msgTypes[5].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_v1_shared_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_v1_shared_proto_goTypes,
		DependencyIndexes: file_api_v1_shared_proto_depIdxs,
		EnumInfos:         file_api_v1_shared_proto_enumTypes,
		MessageInfos:      file_api_v1_shared_proto_msgTypes,
	}.Build()
	File_api_v1_shared_proto = out.File
	file_api_v1_shared_proto_rawDesc = nil
	file_api_v1_shared_proto_goTypes = nil
	file_api_v1_shared_proto_depIdxs = nil
}
