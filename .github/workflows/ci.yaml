name: "Build and Publish Artifacts"

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  proto_build_and_check:
    name: Build and Check Protos
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Download Buf CLI
        uses: bufbuild/buf-setup-action@v1
        with:
          github_token: ${{ github.token }}
      - name: Lint .proto Files
        uses: bufbuild/buf-lint-action@v1
      - name: Format .proto Files
        run: buf format ./proto/ --diff --exit-code
      - name: Check Breaking Changes
        uses: bufbuild/buf-breaking-action@v1
        with:
          against: "https://github.com/${GITHUB_REPOSITORY}.git#branch=develop"
      - name: Generate Protos
        run: |
          buf generate --template buf.gen.ci.yaml
          cd build/proto/swift
          zip -r ${{ github.workspace }}/build/proto.zip ./*
      - name: Upload Generated Protos as CI Artifact
        uses: actions/upload-artifact@v3
        if: github.ref == 'refs/heads/develop'
        with:
          name: generated-protos
          path: build/proto.zip

  tools_build_and_check:
    name: Build and Check Tools
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version-file: go.mod
          cache: true
      - name: Test
        run: go test -v ./tools/lib/...
      - name: Build
        run: GOOS=darwin GOARCH=amd64 go build -v ./tools/cmd/pubgolf-devctrl
      - name: Upload Built Tools as CI Artifact
        uses: actions/upload-artifact@v3
        if: github.ref == 'refs/heads/develop'
        with:
          name: pubgolf-devctrl
          path: pubgolf-devctrl

  api_build_and_check:
    name: Build and Check API Server
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version-file: go.mod
          cache: true
      - name: Test
        run: go test -v ./api/...
      - name: Build API Server Binary
        run: CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -v ./api/cmd/pubgolf-api-server
      - name: Upload API Server Binary as CI Artifact
        uses: actions/upload-artifact@v3
        if: github.ref == 'refs/heads/develop'
        with:
          name: pubgolf-api-server
          path: pubgolf-api-server

  publish_gh_release:
    name: Publish Protos and Tools
    if: github.ref == 'refs/heads/develop'
    needs:
      - proto_build_and_check
      - tools_build_and_check
    runs-on: ubuntu-latest
    steps:
      - name: Download CI Artifact
        uses: actions/download-artifact@v3
        with:
          name: generated-protos
      - name: Download pubgolf-devctrl Tool
        uses: actions/download-artifact@v3
        with:
          name: pubgolf-devctrl
      - name: Get short SHA
        run: echo "SHORT_SHA=${GITHUB_SHA:0:7}" >> $GITHUB_ENV
      - name: Upload as GitHub Release
        if: github.ref == 'refs/heads/develop'
        uses: softprops/action-gh-release@v1
        with:
          files: |
            proto.zip
            pubgolf-devctrl
          tag_name: sha-${{ env.SHORT_SHA }}

  api_publish_docker_image:
    name: Publish API Server
    if: github.ref == 'refs/heads/develop'
    needs:
      - proto_build_and_check
      - api_build_and_check
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Auth with Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract Metadata for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/pubgolf/pubgolf
          tags: |
            type=sha
      - name: Download API Server Binary as CI Artifact
        uses: actions/download-artifact@v3
        with:
          name: pubgolf-api-server
      - name: Build and push Docker Image
        uses: docker/build-push-action@v4
        with:
          push: true
          file: ./infra/Dockerfile
          context: ./
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  trigger_staging_deploy:
    name: Trigger Staging Deploy for App
    if: github.ref == 'refs/heads/develop'
    needs:
      - api_publish_docker_image
    runs-on: ubuntu-latest
    steps:
      - name: Get short SHA
        run: echo "SHORT_SHA=${GITHUB_SHA:0:7}" >> $GITHUB_ENV
      - name: Trigger Deployment Workflow
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: deploy.yaml
          # Disable auto-format to prevent replacing the outer quotes with single quotes
          # prettier-ignore
          inputs: "{ \"env\": \"staging\", \"version\": \"sha-${{ env.SHORT_SHA }}\" }"
